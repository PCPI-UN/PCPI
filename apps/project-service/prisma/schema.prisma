generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

enum ProjectState {
  UNDER_REVIEW
  APPROVED
  REJECTED
}

/**** PROJECTS, DOCUMENTS & PARTICIPANTS ****/
model Project {
  id          Int  @id @default(autoincrement())
  eventId     Int  @map("event_id")
  courseId    Int  @map("course_id")
  name        String  @db.VarChar(255)
  description String? @db.Text
  eventNumber String? @map("event_number") @db.VarChar(150)
  state       ProjectState @map("state")
  createdAt   DateTime @map("created_at") @default(now()) @db.Timestamp()
  updatedAt   DateTime @map("updated_at") @updatedAt @db.Timestamp()

  documents        ProjectDocument[]
  participants     ProjectParticipant[]
  jurorsAssigned ProjectAssignment[]

  @@map("projects")
}

model ProjectDocument {
  id        Int  @id @default(autoincrement())
  projectId Int  @map("project_id")
  url       String  @db.VarChar(255)
  createdAt DateTime @map("created_at") @default(now()) @db.Timestamp()
  updatedAt DateTime @map("updated_at") @updatedAt @db.Timestamp()
  project   Project @relation(fields: [projectId], references: [id])

  @@map("project_documents")
}

model ProjectParticipant {
  userId    Int  @map("user_id")
  projectId Int  @map("project_id")
  studentCode Int? @db.Integer()
  project   Project @relation(fields: [projectId], references: [id])

  @@id([userId, projectId])
  @@map("project_participants")
}

model ProjectAssignment {
  projectId     Int @map("project_id")

  // The combination of these three fields is the 'Juror' id, the person who is assigned to evaluate a project
  memberUserId  Int @map("member_user_id")
  memberEventId Int @map("member_event_id")
  memberRoleId  Int @map("member_role_id")
  
  assignedAt    DateTime @map("assigned_at") @default(now()) @db.Timestamp()
  updatedAt     DateTime @map("updated_at") @updatedAt @db.Timestamp()

  project     Project     @relation(fields: [projectId], references: [id])

  @@id([projectId, memberUserId, memberEventId, memberRoleId])
  @@map("project_assignments")
}

