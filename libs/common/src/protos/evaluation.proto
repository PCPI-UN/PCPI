syntax = "proto3";

package evaluation;

// ===== EVALUATION SERVICE =====
service EvaluationService {
  rpc EvaluateProject(EvaluateProjectRequest) returns (EvaluateProjectResponse);
  rpc CreateEvaluation(CreateEvaluationRequest) returns (CreateEvaluationResponse);
  rpc FindEvaluationById(FindEvaluationByIdRequest) returns (FindEvaluationByIdResponse);
  rpc FindEvaluationsByProject(FindEvaluationsByProjectRequest) returns (FindEvaluationsByProjectResponse);
  rpc FindEvaluationsByEvaluator(FindEvaluationsByEvaluatorRequest) returns (FindEvaluationsByEvaluatorResponse);
  rpc CheckEvaluationExists(CheckEvaluationExistsRequest) returns (CheckEvaluationExistsResponse);
}

// ===== CRITERIONS SERVICE =====
service CriterionsService {
  // Creates a new criterion
  rpc CreateCriterion (CreateCriterionRequest) returns (CreateCriterionResponse) {}

  // Updates an existing criterion
  rpc UpdateCriterion (UpdateCriterionRequest) returns (UpdateCriterionResponse) {}

  // Gets a criterion by ID
  rpc GetCriterion (GetCriterionRequest) returns (GetCriterionResponse) {}

  // Lists criterions with optional filters
  rpc ListCriterions (ListCriterionsRequest) returns (ListCriterionsResponse) {}

  // Deletes a criterion
  rpc DeleteCriterion (DeleteCriterionRequest) returns (DeleteCriterionResponse) {}
}

// ===== EVALUATION MESSAGES =====

message EvaluationScore {
  int32 criterionId = 1;
  double score = 2;
}

message EvaluateProjectRequest {
  int32 projectId = 1;
  int32 memberUserId = 2;
  int32 memberEventId = 3;
  int32 memberRoleId = 4;
  string comments = 5;
  repeated EvaluationScore scores = 6;
}

message EvaluateProjectResponse {
  int32 id = 1;
  int32 projectId = 2;
  int32 memberUserId = 3;
  int32 memberEventId = 4;
  int32 memberRoleId = 5;
  double grade = 6;
  string comments = 7;
  string date = 8;
  repeated EvaluationDetailResponse scores = 9;
}

message CreateEvaluationRequest {
  int32 projectId = 1;
  int32 memberUserId = 2;
  int32 memberEventId = 3;
  int32 memberRoleId = 4;
  double grade = 5;
  string comments = 6;
  repeated EvaluationScore scores = 7;
}

message CreateEvaluationResponse {
  int32 id = 1;
  int32 projectId = 2;
  int32 memberUserId = 3;
  int32 memberEventId = 4;
  int32 memberRoleId = 5;
  double grade = 6;
  string comments = 7;
  string date = 8;
  repeated EvaluationDetailResponse scores = 9;
}

message FindEvaluationByIdRequest {
  int32 id = 1;
}

message FindEvaluationByIdResponse {
  int32 id = 1;
  int32 projectId = 2;
  int32 memberUserId = 3;
  int32 memberEventId = 4;
  int32 memberRoleId = 5;
  double grade = 6;
  string comments = 7;
  string date = 8;
  repeated EvaluationDetailResponse scores = 9;
}

message FindEvaluationsByProjectRequest {
  int32 projectId = 1;
}

message FindEvaluationsByProjectResponse {
  repeated EvaluationResponse evaluations = 1;
}

message FindEvaluationsByEvaluatorRequest {
  int32 memberUserId = 1;
  int32 memberEventId = 2;
  int32 memberRoleId = 3;
}

message FindEvaluationsByEvaluatorResponse {
  repeated EvaluationResponse evaluations = 1;
}

message CheckEvaluationExistsRequest {
  int32 projectId = 1;
  int32 memberUserId = 2;
  int32 memberEventId = 3;
  int32 memberRoleId = 4;
}

message CheckEvaluationExistsResponse {
  bool exists = 1;
}

message EvaluationResponse {
  int32 id = 1;
  int32 projectId = 2;
  int32 memberUserId = 3;
  int32 memberEventId = 4;
  int32 memberRoleId = 5;
  double grade = 6;
  string comments = 7;
  string date = 8;
  repeated EvaluationDetailResponse scores = 9;
}

message EvaluationDetailResponse {
  int32 evaluationId = 1;
  int32 criterionId = 2;
  double score = 3;
}

// ===== CRITERIONS MESSAGES =====

// The request message for creating a new criterion.
message CreateCriterionRequest {
  int32 eventId = 1;
  string name = 2;
  string description = 3;
  double weight = 4;
  bool active = 5;
  repeated int32 courseIds = 6;
}

// The response message containing the newly created criterion.
message CreateCriterionResponse {
  int32 id = 1;
  int32 eventId = 2;
  string name = 3;
  string description = 4;
  double weight = 5;
  bool active = 6;
  repeated int32 courseIds = 7;
  string createdAt = 8;
  string updatedAt = 9;
}

// The request message for updating a criterion.
message UpdateCriterionRequest {
  int32 id = 1;
  int32 eventId = 2;
  string name = 3;
  string description = 4;
  double weight = 5;
  bool active = 6;
  repeated int32 courseIds = 7;
}

// The response message for updating a criterion.
message UpdateCriterionResponse {
  int32 id = 1;
  int32 eventId = 2;
  string name = 3;
  string description = 4;
  double weight = 5;
  bool active = 6;
  repeated int32 courseIds = 7;
  string updatedAt = 8;
}

// The request message for getting a criterion by ID.
message GetCriterionRequest {
  int32 id = 1;
}

// The response message containing the criterion.
message GetCriterionResponse {
  int32 id = 1;
  int32 eventId = 2;
  string name = 3;
  string description = 4;
  double weight = 5;
  bool active = 6;
  repeated int32 courseIds = 7;
  string createdAt = 8;
  string updatedAt = 9;
}

// The request message for listing criterions.
message ListCriterionsRequest {
  int32 eventId = 1;    // Optional filter by event
  int32 courseId = 2;   // Optional filter by course
  int32 pageSize = 3;
  string pageToken = 4;
}

// The response message containing the list of criterions.
message ListCriterionsResponse {
  repeated GetCriterionResponse criterions = 1;
  string nextPageToken = 2;
}

// The request message for deleting a criterion.
message DeleteCriterionRequest {
  int32 id = 1;
}

// The response message for deleting a criterion.
message DeleteCriterionResponse {
  bool ok = 1;
}