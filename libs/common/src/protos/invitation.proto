syntax = "proto3";

package invitation;

// Invitation Service definition
service InvitationService {
  // Creates a new invitation
  rpc CreateInvitation (CreateInvitationRequest) returns (CreateInvitationResponse) {}
  
  // Gets an invitation by token
  rpc GetInvitationByToken (GetInvitationByTokenRequest) returns (Invitation) {}
  
  // Accepts an invitation
  rpc AcceptInvitation (AcceptInvitationRequest) returns (AcceptInvitationResponse) {}
  
  // Rejects an invitation
  rpc RejectInvitation (RejectInvitationRequest) returns (RejectInvitationResponse) {}
}

// ---- INVITATION MESSAGES ----

message CreateInvitationRequest {
  string email = 1;
  string target_type = 2; // EVENT, PROJECT, etc.
  int32 target_id = 3;
  int32 invited_by_user_id = 4;
  repeated int32 role_ids = 5;
  int64 expires_at = 6; // Unix timestamp
}

message CreateInvitationResponse {
  string id = 1;
  string token = 2;
  string email = 3;
  string target_type = 4;
  int32 target_id = 5;
  string status = 6;
  int64 expires_at = 7;
  int32 invited_by_user_id = 8;
}

message GetInvitationByTokenRequest {
  string token = 1;
}

message AcceptInvitationRequest {
  string token = 1;
  int32 user_id = 2;
}

message AcceptInvitationResponse {
  bool success = 1;
  string message = 2;
}

message RejectInvitationRequest {
  string token = 1;
}

message RejectInvitationResponse {
  bool success = 1;
  string message = 2;
}

message Invitation {
  string id = 1;
  string token = 2;
  string email = 3;
  string target_type = 4;
  int32 target_id = 5;
  string status = 6;
  int64 expires_at = 7;
  int32 invited_by_user_id = 8;
  int32 invited_user_id = 9;
  int64 created_at = 10;
  int64 updated_at = 11;
  repeated InvitationRole roles = 12;
}

message InvitationRole {
  string invitation_id = 1;
  int32 role_id = 2;
}
